%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 1
%%Creator: CorelDRAW 12
%%Title: 113162.eps
%%CreationDate: Mon Oct 18 10:14:46 2004
%%DocumentProcessColors: Cyan Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 12.154
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel12Dict 12.0 0
/wCorel12Dict 300 dict def wCorel12Dict begin
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel12Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
56.79808 50.13808 136.50973 180.85776 @E
 0 O 0 @g
0.06 0.38 0.94 0.00 k
/$fm 0 def
59.85128 90.18085 m
59.50970 91.71950 59.08309 93.34205 58.65506 94.96517 C
56.64869 99.48076 56.29720 104.39943 57.45997 109.23194 C
60.12312 120.30208 71.34860 129.43559 84.79672 135.88611 C
88.58608 139.29534 90.61965 139.39172 89.90306 144.41017 C
89.90306 144.42520 89.90277 144.44050 89.90306 144.45524 C
89.20970 143.95946 88.36157 143.66806 87.44769 143.66806 C
86.80762 143.66806 86.20072 143.81206 85.65619 144.06888 C
86.19279 143.35880 86.51112 142.47553 86.51112 141.52054 C
86.51112 139.18706 84.60765 137.28529 82.27531 137.28529 C
79.94239 137.28529 78.03921 139.18706 78.03921 141.52054 C
78.03921 143.85373 79.94239 145.75578 82.27531 145.75578 C
82.91565 145.75578 83.52425 145.61376 84.06964 145.35609 C
83.53247 146.06702 83.21272 146.94831 83.21272 147.90387 C
83.21272 150.23622 85.11534 152.13883 87.44769 152.13883 C
89.27405 152.13883 90.83537 150.97238 91.42809 149.34784 C
91.57039 149.07827 91.72205 148.75455 91.88816 148.35912 C
96.65178 134.06683 88.08151 121.15814 82.56444 108.63383 C
78.41339 100.11345 78.80655 91.05222 78.81704 81.89376 C
78.81704 79.93020 78.81704 75.34035 78.81704 73.37622 C
78.47461 72.67380 78.20022 72.41102 77.48759 71.80384 C
76.49802 73.10608 76.61197 74.44573 76.42517 75.99940 C
76.42517 79.50331 76.42517 83.09083 76.42517 86.67921 C
76.64457 119.46161 89.24769 124.71194 89.49543 134.09150 C
73.97376 127.37480 60.53613 112.99011 61.04778 102.05660 C
61.13254 100.23704 61.28759 99.37984 61.63058 97.45285 C
61.72384 97.21672 61.81002 96.97691 61.89250 96.73710 C
62.40444 99.52328 63.73843 101.55345 65.65890 101.99452 C
68.95049 102.74939 72.75600 98.54107 74.12513 92.62346 C
75.48576 86.69764 73.91991 81.24265 70.61754 80.48381 C
67.99124 79.88003 65.03754 82.43830 63.25398 86.50431 C
63.49266 80.59238 63.80901 74.76066 69.16280 70.53279 C
77.82066 64.33257 84.03420 79.15238 84.19861 82.49301 C
84.70687 93.39846 86.95644 96.10526 96.92674 104.88047 C
96.92504 100.76060 96.94120 99.04507 96.94120 95.54230 C
83.74592 86.50998 89.88973 87.97946 85.78545 73.50831 C
82.37452 61.47978 71.85515 60.28157 65.14809 69.42161 C
61.01887 75.05036 60.73257 83.65946 59.85128 90.18085 C
59.85128 90.18085 L
@c
75.57506 118.98454 m
71.72646 118.58995 65.94860 109.62227 71.23181 107.40217 C
75.04724 106.48573 75.28564 111.36614 75.28564 113.56554 C
74.73005 112.40306 71.89313 108.21855 71.89313 112.15956 C
72.10006 114.61776 73.69002 116.50932 75.57506 118.98454 C
75.57506 118.98454 L
@c
98.83672 75.70630 m
94.32567 79.99483 93.38854 80.52293 89.72957 88.22750 C
90.49861 88.56907 91.38472 89.49742 92.23852 89.92403 C
94.48923 86.46520 96.84170 83.36523 100.11628 81.22649 C
99.20976 79.18923 99.37446 76.91698 98.83672 75.70630 C
98.83672 75.70630 L
@c
87.28980 62.16690 m
91.92557 67.34154 L
95.91732 63.76592 L
91.28098 58.59213 L
87.28980 62.16690 L
87.28980 62.16690 L
@c
80.06173 63.42633 m
80.18277 63.78888 82.03833 65.06022 82.40457 64.72431 C
84.49909 59.56781 89.06485 54.36765 94.27975 56.94917 C
97.39843 58.49376 98.64567 63.08929 98.97789 66.51780 C
99.37786 70.62435 99.25994 74.08318 100.17411 78.30652 C
102.67909 89.87754 109.80312 92.61524 116.85940 101.18494 C
118.41534 103.07367 120.13625 105.04573 120.93335 107.43817 C
121.20803 108.26419 121.40731 110.29946 120.69128 111.16857 C
116.40756 108.65424 112.51899 105.46611 107.92460 100.69427 C
108.03572 103.75228 108.05528 105.42416 107.80980 110.04350 C
117.53717 118.50406 108.41471 130.29392 98.95946 139.90450 C
98.84948 131.59304 97.57843 125.36702 95.07515 119.43411 C
91.03918 109.86435 88.23657 104.45556 89.08724 99.05896 C
88.72583 98.64057 87.07890 96.40913 86.47398 95.69055 C
81.86343 103.53317 94.12498 125.06939 95.98791 132.29802 C
96.92617 135.93770 96.28356 139.82683 95.98791 143.57452 C
95.76992 146.34737 93.94554 146.90154 94.27975 151.94636 C
94.61339 156.99146 95.20299 159.66142 94.27975 166.12781 C
93.94129 168.49559 94.08132 170.92006 94.27975 173.30372 C
94.75767 179.04699 100.43235 181.04910 100.20387 180.84501 C
96.54917 177.57836 96.37597 174.16091 96.84255 169.45965 C
97.60961 161.72164 112.56038 149.52643 120.33099 137.52652 C
130.19046 122.30249 129.88885 121.71203 133.25244 113.33254 C
134.14620 111.10762 135.13351 106.97641 135.79824 104.44734 C
136.78781 100.68038 136.70561 90.76932 135.79824 86.67921 C
135.33619 84.59263 132.73370 79.36441 131.61203 77.79430 C
129.99770 75.53367 128.11124 73.48734 125.60315 72.15846 C
118.91735 68.61260 112.59184 69.82016 105.41254 71.25931 C
105.41254 73.49216 105.77169 75.46564 106.15380 77.09443 C
110.68696 77.34586 114.81534 76.60205 119.39556 78.74674 C
132.30142 84.79162 134.44724 99.81921 129.21931 111.53820 C
124.90894 121.20293 124.51380 122.14602 123.17301 124.29780 C
114.35414 138.45430 101.12060 153.75118 98.78457 156.94214 C
96.71272 159.76942 95.54457 149.88586 98.38035 147.16261 C
106.51096 139.35798 117.91502 129.68957 115.57899 116.92120 C
117.89745 118.56841 118.58797 118.91962 121.13631 121.26784 C
124.39332 114.98031 125.70009 106.50416 123.32494 100.26198 C
122.26365 97.46929 120.26608 94.80302 118.21011 92.57357 C
114.09931 88.11496 105.86693 82.54630 104.70217 75.99940 C
104.10208 72.61852 103.76135 67.68340 103.76135 64.12620 C
103.76135 54.86683 98.75679 46.54290 88.13083 51.73824 C
85.00535 53.26668 81.05528 60.01058 80.06173 63.42633 C
80.06173 63.42633 L
@c
107.21735 66.97446 m
108.91304 64.37083 109.81304 63.36369 110.62176 62.92460 C
111.67172 62.35455 112.99861 62.32904 114.15373 62.33131 C
114.22205 60.88280 114.20277 59.89578 114.27194 58.51332 C
109.52561 58.32907 107.21735 62.23635 107.21735 66.97446 C
107.21735 66.97446 L
@c
115.27313 85.18450 m
120.00047 90.27468 L
123.92759 86.62847 L
119.19997 81.53802 L
115.27313 85.18450 L
115.27313 85.18450 L
@c
98.70009 95.77984 m
103.33587 100.95477 L
107.32791 97.38000 L
102.69269 92.20535 L
98.70009 95.77984 L
98.70009 95.77984 L
@c
97.82646 109.71666 m
98.58983 115.83496 102.46706 118.20019 106.71137 122.70161 C
107.05209 122.18910 107.47956 121.59128 107.90702 120.99373 C
104.57461 117.23414 101.24362 113.47569 97.82646 109.71666 C
97.82646 109.71666 L
@c
87.99761 71.80838 m
92.63254 76.98359 L
96.62485 73.40740 L
91.98879 68.23389 L
87.99761 71.80838 L
87.99761 71.80838 L
@c
64.69512 90.01871 m
64.32236 91.07433 65.56337 92.48202 67.45975 93.15411 C
69.35528 93.82394 71.20800 93.51468 71.58132 92.45877 C
71.95323 91.40343 70.71194 89.99320 68.81641 89.32252 C
66.92117 88.65269 65.06901 88.96195 64.69512 90.01871 C
64.69512 90.01871 L
@c
F

@rax %Note: Object
32.36740 20.61694 160.38850 41.40283 @E
 0 O 0 @g
0.98 0.61 0.01 0.00 k
/$fm 0 def
113.49893 36.04025 m
117.40620 36.04025 L
117.40507 33.64753 117.40507 31.25480 117.40507 28.86208 C
140.94198 28.86208 L
139.41836 31.76702 135.57033 34.67877 131.55761 31.05099 C
131.55761 41.89890 142.76806 32.75518 147.33893 28.86208 C
151.72724 28.86208 L
151.72724 40.68085 L
155.19175 40.68085 L
155.19175 28.86208 L
155.19175 25.39757 L
151.72724 25.39757 L
139.00564 25.39757 L
141.97436 23.16841 L
138.57591 20.61694 L
135.17745 23.16841 L
138.14589 25.39757 L
117.40620 25.39757 L
117.40620 25.39191 117.40620 25.38624 117.40620 25.38028 C
117.47679 22.68737 115.22098 21.66661 111.21194 21.90869 C
111.21534 22.93994 111.21761 23.63528 111.22101 24.66539 C
111.98098 24.79266 113.49213 24.90520 113.49893 25.97953 C
113.49893 36.04025 L
113.49893 36.04025 L
@c
34.74057 28.29685 m
55.42186 28.29685 L
55.42186 35.67997 L
57.79474 35.67997 L
57.79474 28.29685 L
64.34901 28.29685 L
64.34901 35.67997 L
66.72274 35.67997 L
66.72274 28.29685 L
66.72274 25.39757 L
64.34901 25.39757 L
57.29272 25.39757 L
56.66230 26.59578 L
56.66230 27.26192 L
56.60816 27.26192 L
56.60816 26.59578 L
55.97773 25.39757 L
34.74057 25.39757 L
33.38306 25.39757 L
32.36740 25.39757 L
32.36740 35.67997 L
34.74057 35.67997 L
34.74057 28.29685 L
34.74057 28.29685 L
@c
46.35496 40.15843 m
48.47584 38.03669 L
46.35439 35.91496 L
44.99915 37.27077 L
43.64164 35.91496 L
41.52104 38.03669 L
43.64277 40.15843 L
44.99915 38.80233 L
46.35496 40.15843 L
46.35496 40.15843 L
@c
65.39669 40.15843 m
67.51871 38.03669 L
65.39669 35.91496 L
63.27496 38.03669 L
65.39669 40.15843 L
65.39669 40.15843 L
@c
69.86154 29.36636 m
71.98214 27.24463 L
69.86041 25.12403 L
67.73953 27.24576 L
69.86154 29.36636 L
69.86154 29.36636 L
@c
78.03184 39.04951 m
80.11247 40.64485 L
82.84961 38.54665 L
80.11247 36.45043 L
78.03184 38.04491 L
75.95008 36.45043 L
73.21294 38.54665 L
75.95008 40.64485 L
78.03184 39.04951 L
78.03184 39.04951 L
@c
83.02167 25.66857 m
72.95953 25.66857 L
72.95953 31.32765 L
72.95953 33.95367 75.11159 36.10517 77.74129 36.10517 C
78.24246 36.10517 L
80.86876 36.10517 83.02167 33.95367 83.02167 31.32765 C
83.02167 25.66857 L
83.02167 25.66857 L
@c
79.88967 28.91650 m
76.09068 28.91650 L
76.09068 31.05354 L
76.09068 32.04510 76.90309 32.85751 77.89663 32.85751 C
78.08542 32.85751 L
79.07726 32.85751 79.88967 32.04510 79.88967 31.05354 C
79.88967 28.91650 L
79.88967 28.91650 L
@c
84.88431 36.04025 m
88.79074 36.04025 L
88.78989 33.64753 88.78989 31.25480 88.78989 28.86208 C
107.17597 28.86208 L
107.17597 36.05187 L
110.72154 36.05187 L
110.72154 28.86208 L
110.72154 28.86208 L
110.72154 25.39757 L
88.79074 25.39757 L
88.79074 25.39191 88.79074 25.38624 88.79074 25.38028 C
88.86132 22.68737 86.60551 21.66661 82.59562 21.90869 C
82.59987 22.93994 82.60299 23.63528 82.60554 24.66539 C
83.36494 24.79266 84.87666 24.90520 84.88431 25.97953 C
84.88431 36.04025 L
84.88431 36.04025 L
@c
98.56658 23.31439 m
100.64778 24.90860 L
103.38463 22.81238 L
100.64778 20.71502 L
98.56658 22.30980 L
96.48482 20.71502 L
93.74825 22.81238 L
96.48482 24.90860 L
98.56658 23.31439 L
98.56658 23.31439 L
@c
112.80501 39.30576 m
115.54328 41.40283 L
118.28013 39.30576 L
115.54328 37.20926 L
112.80501 39.30576 L
112.80501 39.30576 L
@c
156.92400 40.68085 m
160.38850 40.68085 L
160.38850 25.39757 L
156.92400 25.39757 L
156.92400 40.68085 L
156.92400 40.68085 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel12Dict 12.0 0
%%EOF
